0	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.ensureNode(I)V:76 - InsertUnaryOp Negation of nodeId
1	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.ensureNode(I)V:76 - InsertUnaryOp IINC 1 nodeId
2	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.ensureNode(I)V:76 - InsertUnaryOp IINC -1 nodeId
3	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:91 - InsertUnaryOp Negation of nodeId
4	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:91 - InsertUnaryOp IINC 1 nodeId
5	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:91 - InsertUnaryOp IINC -1 nodeId
6	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:91 - ReplaceComparisonOperator == -> -2
7	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:91 - ReplaceComparisonOperator == -> >=
8	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:91 - ReplaceComparisonOperator == -> <=
9	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:92 - InsertUnaryOp Negation of nodeId
10	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:92 - InsertUnaryOp IINC 1 nodeId
11	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:92 - InsertUnaryOp IINC -1 nodeId
12	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:92 - ReplaceArithmeticOperator - -> +
13	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:92 - ReplaceArithmeticOperator - -> %
14	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:92 - ReplaceArithmeticOperator - -> *
15	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:92 - ReplaceArithmeticOperator - -> /
16	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:93 - InsertUnaryOp Negation of nodeId
17	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:93 - InsertUnaryOp IINC 1 nodeId
18	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLatitude(I)D:93 - InsertUnaryOp IINC -1 nodeId
19	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:98 - InsertUnaryOp Negation of nodeId
20	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:98 - InsertUnaryOp IINC 1 nodeId
21	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:98 - InsertUnaryOp IINC -1 nodeId
22	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:98 - ReplaceComparisonOperator == -> -2
23	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:98 - ReplaceComparisonOperator == -> >=
24	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:98 - ReplaceComparisonOperator == -> <=
25	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:99 - InsertUnaryOp Negation of nodeId
26	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:99 - InsertUnaryOp IINC 1 nodeId
27	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:99 - InsertUnaryOp IINC -1 nodeId
28	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:99 - ReplaceArithmeticOperator - -> +
29	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:99 - ReplaceArithmeticOperator - -> %
30	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:99 - ReplaceArithmeticOperator - -> *
31	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:99 - ReplaceArithmeticOperator - -> /
32	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:100 - InsertUnaryOp Negation of nodeId
33	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:100 - InsertUnaryOp IINC 1 nodeId
34	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLongitude(I)D:100 - InsertUnaryOp IINC -1 nodeId
35	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:105 - InsertUnaryOp Negation of nodeId
36	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:105 - InsertUnaryOp IINC 1 nodeId
37	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:105 - InsertUnaryOp IINC -1 nodeId
38	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:105 - ReplaceComparisonOperator == -> -2
39	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:105 - ReplaceComparisonOperator == -> >=
40	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:105 - ReplaceComparisonOperator == -> <=
41	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:106 - InsertUnaryOp Negation of nodeId
42	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:106 - InsertUnaryOp IINC 1 nodeId
43	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:106 - InsertUnaryOp IINC -1 nodeId
44	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:106 - ReplaceArithmeticOperator - -> +
45	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:106 - ReplaceArithmeticOperator - -> %
46	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:106 - ReplaceArithmeticOperator - -> *
47	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:106 - ReplaceArithmeticOperator - -> /
48	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:107 - InsertUnaryOp Negation of nodeId
49	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:107 - InsertUnaryOp IINC 1 nodeId
50	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getElevation(I)D:107 - InsertUnaryOp IINC -1 nodeId
51	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getAdditionalNodeField(I)I:112 - InsertUnaryOp Negation of nodeId
52	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getAdditionalNodeField(I)I:112 - InsertUnaryOp IINC 1 nodeId
53	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getAdditionalNodeField(I)I:112 - InsertUnaryOp IINC -1 nodeId
54	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$1.getAdditionalNodeField(I)I:112 - ReplaceComparisonOperator == -> -2
55	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$1.getAdditionalNodeField(I)I:112 - ReplaceComparisonOperator == -> >=
56	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$1.getAdditionalNodeField(I)I:112 - ReplaceComparisonOperator == -> <=
57	ReplaceConstant	com.graphhopper.routing.QueryGraph$1.getAdditionalNodeField(I)I:113 - ReplaceConstant - 0 -> 1
58	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getAdditionalNodeField(I)I:114 - InsertUnaryOp Negation of nodeId
59	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getAdditionalNodeField(I)I:114 - InsertUnaryOp IINC 1 nodeId
60	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getAdditionalNodeField(I)I:114 - InsertUnaryOp IINC -1 nodeId
61	ReplaceConstant	com.graphhopper.routing.QueryGraph$1.setNode(IDD)V:119 - ReplaceConstant - Not supported yet. -> 
62	ReplaceConstant	com.graphhopper.routing.QueryGraph$1.setNode(IDDD)V:124 - ReplaceConstant - Not supported yet. -> 
63	ReplaceConstant	com.graphhopper.routing.QueryGraph$1.setAdditionalNodeField(II)V:129 - ReplaceConstant - Not supported yet. -> 
64	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLat(I)D:134 - InsertUnaryOp Negation of nodeId
65	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLat(I)D:134 - InsertUnaryOp IINC 1 nodeId
66	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLat(I)D:134 - InsertUnaryOp IINC -1 nodeId
67	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLon(I)D:139 - InsertUnaryOp Negation of nodeId
68	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLon(I)D:139 - InsertUnaryOp IINC 1 nodeId
69	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getLon(I)D:139 - InsertUnaryOp IINC -1 nodeId
70	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getEle(I)D:144 - InsertUnaryOp Negation of nodeId
71	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getEle(I)D:144 - InsertUnaryOp IINC 1 nodeId
72	InsertUnaryOp	com.graphhopper.routing.QueryGraph$1.getEle(I)D:144 - InsertUnaryOp IINC -1 nodeId
