0	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:276 - ReplaceConstant - 0 -> 1
1	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:277 - ReplaceConstant - 3 -> 0
2	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:277 - ReplaceConstant - 3 -> 1
3	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:277 - ReplaceConstant - 3 -> -1
4	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:277 - ReplaceConstant - 3 -> 2
5	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:277 - ReplaceConstant - 3 -> 4
6	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:302 - ReplaceConstant - 0 -> 1
7	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:304 - InsertUnaryOp Negation of baseNode
8	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:304 - InsertUnaryOp IINC 1 baseNode
9	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:304 - InsertUnaryOp IINC -1 baseNode
10	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:304 - InsertUnaryOp Negation of adjNode
11	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:304 - InsertUnaryOp IINC 1 adjNode
12	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:304 - InsertUnaryOp IINC -1 adjNode
13	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:304 - ReplaceConstant - 0 -> 1
14	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:305 - InsertUnaryOp Negation of baseNode
15	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:305 - InsertUnaryOp IINC 1 baseNode
16	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:305 - InsertUnaryOp IINC -1 baseNode
17	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:305 - InsertUnaryOp Negation of adjNode
18	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:305 - InsertUnaryOp IINC 1 adjNode
19	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:305 - InsertUnaryOp IINC -1 adjNode
20	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:305 - ReplaceConstant - 1 -> 0
21	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:306 - ReplaceConstant - 1 -> 0
22	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:307 - ReplaceConstant - 1 -> 0
23	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:308 - InsertUnaryOp Negation of baseNode
24	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:308 - InsertUnaryOp IINC 1 baseNode
25	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:308 - InsertUnaryOp IINC -1 baseNode
26	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:309 - ReplaceArithmeticOperator + -> %
27	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:309 - ReplaceArithmeticOperator + -> -
28	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:309 - ReplaceArithmeticOperator + -> *
29	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:309 - ReplaceArithmeticOperator + -> /
30	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:310 - ReplaceConstant - 0 -> 1
31	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - ReplaceConstant - 0 -> 1
32	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - InsertUnaryOp Negation of counter
33	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - InsertUnaryOp IINC 1 counter
34	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - InsertUnaryOp IINC -1 counter
35	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - ReplaceComparisonOperator >= -> -1
36	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - ReplaceComparisonOperator >= -> >
37	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - ReplaceComparisonOperator >= -> ==
38	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:316 - InsertUnaryOp Negation of counter
39	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:316 - InsertUnaryOp IINC 1 counter
40	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:316 - InsertUnaryOp IINC -1 counter
41	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:317 - InsertUnaryOp Negation of baseNode
42	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:317 - InsertUnaryOp IINC 1 baseNode
43	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:317 - InsertUnaryOp IINC -1 baseNode
44	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:317 - ReplaceComparisonOperator == -> -2
45	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:317 - ReplaceComparisonOperator == -> >=
46	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:317 - ReplaceComparisonOperator == -> <=
47	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:318 - ReplaceConstant - Base nodes have to be identical but were not:  -> 
48	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:318 - ReplaceConstant -  vs  -> 
49	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:323 - ReplaceComparisonOperator == -> -2
50	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:323 - ReplaceComparisonOperator == -> >=
51	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:323 - ReplaceComparisonOperator == -> <=
52	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:324 - InsertUnaryOp Negation of prevNodeId
53	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:324 - InsertUnaryOp IINC 1 prevNodeId
54	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:324 - InsertUnaryOp IINC -1 prevNodeId
55	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:329 - InsertUnaryOp Negation of origTraversalKey
56	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:329 - InsertUnaryOp IINC 1 origTraversalKey
57	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:329 - InsertUnaryOp IINC -1 origTraversalKey
58	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:329 - InsertUnaryOp Negation of origRevTraversalKey
59	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:329 - InsertUnaryOp IINC 1 origRevTraversalKey
60	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:329 - InsertUnaryOp IINC -1 origRevTraversalKey
61	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:329 - InsertUnaryOp Negation of prevWayIndex
62	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:329 - InsertUnaryOp IINC 1 prevWayIndex
63	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:329 - InsertUnaryOp IINC -1 prevWayIndex
64	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:331 - InsertUnaryOp Negation of prevNodeId
65	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:331 - InsertUnaryOp IINC 1 prevNodeId
66	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:331 - InsertUnaryOp IINC -1 prevNodeId
67	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:331 - InsertUnaryOp Negation of virtNodeId
68	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:331 - InsertUnaryOp IINC 1 virtNodeId
69	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:331 - InsertUnaryOp IINC -1 virtNodeId
70	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:331 - InsertUnaryOp Negation of reverseFlags
71	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:334 - InsertUnaryOp Negation
72	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:334 - InsertUnaryOp Negation
73	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:334 - InsertUnaryOp Negation
74	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:337 - InsertUnaryOp Negation of addedEdges
75	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:337 - InsertUnaryOp IINC 1 addedEdges
76	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:337 - InsertUnaryOp IINC -1 addedEdges
77	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:337 - ReplaceComparisonOperator == -> -2
78	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:337 - ReplaceComparisonOperator == -> >=
79	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:337 - ReplaceComparisonOperator == -> <=
80	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:338 - ReplaceConstant - 2 -> 0
81	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:338 - ReplaceConstant - 2 -> 1
82	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:338 - ReplaceConstant - 2 -> -1
83	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:338 - ReplaceConstant - 2 -> 3
84	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:338 - ReplaceArithmeticOperator - -> +
85	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:338 - ReplaceArithmeticOperator - -> %
86	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:338 - ReplaceArithmeticOperator - -> *
87	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:338 - ReplaceArithmeticOperator - -> /
88	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:339 - ReplaceConstant - 2 -> 0
89	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:339 - ReplaceConstant - 2 -> 1
90	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:339 - ReplaceConstant - 2 -> -1
91	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:339 - ReplaceConstant - 2 -> 3
92	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:339 - ReplaceArithmeticOperator - -> +
93	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:339 - ReplaceArithmeticOperator - -> %
94	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:339 - ReplaceArithmeticOperator - -> *
95	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:339 - ReplaceArithmeticOperator - -> /
96	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:342 - ReplaceConstant - 1 -> 0
97	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:343 - InsertUnaryOp Negation of virtNodeId
98	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:343 - InsertUnaryOp IINC 1 virtNodeId
99	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:343 - InsertUnaryOp IINC -1 virtNodeId
100	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:344 - InsertUnaryOp Negation of virtNodeId
101	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:344 - InsertUnaryOp IINC 1 virtNodeId
102	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:344 - InsertUnaryOp IINC -1 virtNodeId
103	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:345 - ReplaceConstant - 1 -> 0
104	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:345 - ReplaceArithmeticOperator + -> %
105	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:345 - ReplaceArithmeticOperator + -> -
106	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:345 - ReplaceArithmeticOperator + -> *
107	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:345 - ReplaceArithmeticOperator + -> /
108	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:347 - ReplaceVariable virtNodeId -> edgeId
109	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:347 - ReplaceVariable virtNodeId -> baseNode
110	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:347 - ReplaceVariable virtNodeId -> adjNode
111	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:347 - ReplaceVariable virtNodeId -> origRevTraversalKey
112	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:347 - ReplaceVariable virtNodeId -> prevNodeId
113	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:347 - ReplaceVariable virtNodeId -> origTraversalKey
114	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:347 - ReplaceVariable virtNodeId -> counter
115	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:347 - ReplaceVariable virtNodeId -> prevWayIndex
116	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - ReplaceVariable counter -> edgeId
117	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - ReplaceVariable counter -> baseNode
118	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - ReplaceVariable counter -> adjNode
119	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - ReplaceVariable counter -> origRevTraversalKey
120	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - ReplaceVariable counter -> prevNodeId
121	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - ReplaceVariable counter -> origTraversalKey
122	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - ReplaceVariable counter -> virtNodeId
123	ReplaceVariable	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:315 - ReplaceVariable counter -> prevWayIndex
124	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:351 - InsertUnaryOp Negation of addedEdges
125	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:351 - InsertUnaryOp IINC 1 addedEdges
126	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:351 - InsertUnaryOp IINC -1 addedEdges
127	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:351 - ReplaceComparisonOperator == -> -2
128	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:351 - ReplaceComparisonOperator == -> >=
129	ReplaceComparisonOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:351 - ReplaceComparisonOperator == -> <=
130	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:352 - InsertUnaryOp Negation of origTraversalKey
131	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:352 - InsertUnaryOp IINC 1 origTraversalKey
132	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:352 - InsertUnaryOp IINC -1 origTraversalKey
133	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:352 - InsertUnaryOp Negation of origRevTraversalKey
134	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:352 - InsertUnaryOp IINC 1 origRevTraversalKey
135	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:352 - InsertUnaryOp IINC -1 origRevTraversalKey
136	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:352 - InsertUnaryOp Negation of prevWayIndex
137	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:352 - InsertUnaryOp IINC 1 prevWayIndex
138	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:352 - InsertUnaryOp IINC -1 prevWayIndex
139	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceConstant - 1 -> 0
140	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceArithmeticOperator - -> +
141	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceArithmeticOperator - -> %
142	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceArithmeticOperator - -> *
143	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceArithmeticOperator - -> /
144	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceConstant - 2 -> 0
145	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceConstant - 2 -> 1
146	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceConstant - 2 -> -1
147	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceConstant - 2 -> 3
148	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceArithmeticOperator - -> +
149	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceArithmeticOperator - -> %
150	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceArithmeticOperator - -> *
151	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceArithmeticOperator - -> /
152	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - InsertUnaryOp Negation of virtNodeId
153	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - InsertUnaryOp IINC 1 virtNodeId
154	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - InsertUnaryOp IINC -1 virtNodeId
155	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceConstant - 1 -> 0
156	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceArithmeticOperator - -> +
157	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceArithmeticOperator - -> %
158	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceArithmeticOperator - -> *
159	ReplaceArithmeticOperator	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - ReplaceArithmeticOperator - -> /
160	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - InsertUnaryOp Negation of adjNode
161	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - InsertUnaryOp IINC 1 adjNode
162	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - InsertUnaryOp IINC -1 adjNode
163	InsertUnaryOp	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:354 - InsertUnaryOp Negation of reverseFlags
164	ReplaceConstant	com.graphhopper.routing.QueryGraph$3.apply(ILjava/util/List;)Z:357 - ReplaceConstant - 1 -> 0
